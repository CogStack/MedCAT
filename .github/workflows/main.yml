name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
      max-parallel: 4

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Check types
        run: |
          python -m mypy --follow-imports=normal medcat
      - name: Lint
        run: |
          flake8 medcat
      - name: Test
        run: |
          all_files=$(git ls-files | grep '^tests/.*\.py$' | grep -v '/__init__\.py$' | sed 's/\.py$//' | sed 's/\//./g')
          num_files=$(echo "$all_files" | wc -l)
          midpoint=$((num_files / 2))
          first_half_nl=$(echo "$all_files" | head -n $midpoint)
          second_half_nl=$(echo "$all_files" | tail -n +$(($midpoint + 1)))
          timeout 25m python -m unittest ${first_half_nl[@]}
          timeout 25m python -m unittest ${second_half_nl[@]}

      - name: Get the latest release version
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            core.setOutput('latest_version', latestRelease.data.tag_name);

      - name: Make sure there's no deprecated methods that should be removed.
        # only run this for master -> production PR. I.e just before doing a release.
        if: github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'production'
        env:
          VERSION: ${{ steps.get_latest_release.outputs.latest_version }}
        run: |
          python tests/check_deprecations.py "$VERSION" --next-version --remove-prefix

  publish-to-test-pypi:

    if: |
      github.repository == 'CogStack/MedCAT' &&
      github.ref == 'refs/heads/master' &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags') != true
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    concurrency: publish-to-test-pypi
    needs: [build]

    steps:
      - name: Checkout master
        uses: actions/checkout@v4
        with:
          ref: 'master'
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user

      - name: Configure the version
        run: >-
          sed --in-place
          "s/node-and-date/no-local-version/g"
          setup.py

      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .

      - name: Publish dev distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
        continue-on-error: true
